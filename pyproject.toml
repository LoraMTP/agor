[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agor"
version = "0.1.5"
description = "AgentOrchestrator - Multi-Agent Development Coordination Platform"
authors = [{name = "Jeremiah K.", email = "jeremiahk@gmx.com"}]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Intended Audience :: Developers",
]
dependencies = [
    "httpx",
    "plumbum",
    "pyperclip",
    "tqdm",
    "typer",
    "platformdirs>=4.3.7,<5.0.0",
    "structlog>=24.1",
    "pydantic-settings>=2.0",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-asyncio",
    "pytest-tmp-git",
    "ruff",
    "mypy",
    "pre-commit",
    "build",
    "twine"
]

[project.scripts]
agor = "agor.main:app"
agentgrunt = "agor.main:app"

[project.urls]
"Bug Tracker" = "https://github.com/jeremiah-k/agor/issues"
"Repository" = "https://github.com/jeremiah-k/agor"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"agor.tools" = ["*.md", "*.py"]

[tool.trunk]
enabled = true

[tool.coverage.run]
branch = true
source = ["src/agor"]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101"]  # allow assert in tests

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
